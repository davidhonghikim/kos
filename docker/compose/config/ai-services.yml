version: '3.8'

services:
  # Automatic1111 Stable Diffusion WebUI
  automatic1111:
    image: ${KOS_AUTOMATIC1111_IMAGE}:${KOS_AUTOMATIC1111_VERSION}
    container_name: ${KOS_AUTOMATIC1111_CONTAINER_NAME}
    environment:
      - COMMANDLINE_ARGS=${KOS_AUTOMATIC1111_COMMANDLINE_ARGS}
      - REQS_FILE=${KOS_AUTOMATIC1111_REQS_FILE}
    volumes:
      - ${KOS_AUTOMATIC1111_MODELS_VOLUME}:/app/models
      - ${KOS_AUTOMATIC1111_OUTPUTS_VOLUME}:/app/outputs
      - ${KOS_AUTOMATIC1111_EXTENSIONS_VOLUME}:/app/extensions
    ports:
      - "${KOS_AUTOMATIC1111_EXTERNAL_PORT}:${KOS_AUTOMATIC1111_INTERNAL_PORT}"
    networks:
      - ${KOS_CONTAINER_NETWORK}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${KOS_AUTOMATIC1111_HOST}:${KOS_AUTOMATIC1111_INTERNAL_PORT}/sdapi/v1/samplers"]
      interval: ${KOS_HEALTH_CHECK_INTERVAL}
      timeout: ${KOS_HEALTH_CHECK_TIMEOUT}
      retries: ${KOS_HEALTH_CHECK_RETRIES}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: ${KOS_GPU_COUNT}
              capabilities: [gpu]

  # ComfyUI Node-Based Workflow
  comfyui:
    image: ${KOS_COMFYUI_IMAGE}:${KOS_COMFYUI_VERSION}
    container_name: ${KOS_COMFYUI_CONTAINER_NAME}
    environment:
      - COMFYUI_PORT=${KOS_COMFYUI_INTERNAL_PORT}
    volumes:
      - ${KOS_COMFYUI_MODELS_VOLUME}:/app/models
      - ${KOS_COMFYUI_OUTPUTS_VOLUME}:/app/output
      - ${KOS_COMFYUI_CUSTOM_NODES_VOLUME}:/app/custom_nodes
    ports:
      - "${KOS_COMFYUI_EXTERNAL_PORT}:${KOS_COMFYUI_INTERNAL_PORT}"
    networks:
      - ${KOS_CONTAINER_NETWORK}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${KOS_COMFYUI_HOST}:${KOS_COMFYUI_INTERNAL_PORT}/system_stats"]
      interval: ${KOS_HEALTH_CHECK_INTERVAL}
      timeout: ${KOS_HEALTH_CHECK_TIMEOUT}
      retries: ${KOS_HEALTH_CHECK_RETRIES}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: ${KOS_GPU_COUNT}
              capabilities: [gpu]

  # n8n Workflow Automation
  n8n:
    image: ${KOS_N8N_IMAGE}:${KOS_N8N_VERSION}
    container_name: ${KOS_N8N_CONTAINER_NAME}
    environment:
      - N8N_HOST=${KOS_N8N_HOST}
      - N8N_PORT=${KOS_N8N_INTERNAL_PORT}
      - N8N_PROTOCOL=${KOS_N8N_PROTOCOL}
      - N8N_USER_MANAGEMENT_DISABLED=${KOS_N8N_USER_MANAGEMENT_DISABLED}
      - N8N_BASIC_AUTH_ACTIVE=${KOS_N8N_BASIC_AUTH_ACTIVE}
      - N8N_BASIC_AUTH_USER=${KOS_N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${KOS_N8N_BASIC_AUTH_PASSWORD}
      - WEBHOOK_URL=${KOS_N8N_WEBHOOK_URL}
      - GENERIC_TIMEZONE=${KOS_N8N_TIMEZONE}
      - N8N_ENCRYPTION_KEY=${KOS_N8N_ENCRYPTION_KEY}
    volumes:
      - ${KOS_N8N_VOLUME}:/home/node/.n8n
    ports:
      - "${KOS_N8N_EXTERNAL_PORT}:${KOS_N8N_INTERNAL_PORT}"
    networks:
      - ${KOS_CONTAINER_NETWORK}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${KOS_N8N_HOST}:${KOS_N8N_INTERNAL_PORT}/healthz"]
      interval: ${KOS_HEALTH_CHECK_INTERVAL}
      timeout: ${KOS_HEALTH_CHECK_TIMEOUT}
      retries: ${KOS_HEALTH_CHECK_RETRIES}

  # Penpot Design and Prototyping
  penpot:
    image: ${KOS_PENPOT_IMAGE}:${KOS_PENPOT_VERSION}
    container_name: ${KOS_PENPOT_CONTAINER_NAME}
    environment:
      - PENPOT_DATABASE_URI=${KOS_PENPOT_DATABASE_URI}
      - PENPOT_REDIS_URI=${KOS_PENPOT_REDIS_URI}
      - PENPOT_SECRET_KEY=${KOS_PENPOT_SECRET_KEY}
      - PENPOT_PUBLIC_URI=${KOS_PENPOT_PUBLIC_URI}
    volumes:
      - ${KOS_PENPOT_VOLUME}:/app/data
    ports:
      - "${KOS_PENPOT_EXTERNAL_PORT}:${KOS_PENPOT_INTERNAL_PORT}"
    networks:
      - ${KOS_CONTAINER_NETWORK}
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${KOS_PENPOT_HOST}:${KOS_PENPOT_INTERNAL_PORT}/api/health"]
      interval: ${KOS_HEALTH_CHECK_INTERVAL}
      timeout: ${KOS_HEALTH_CHECK_TIMEOUT}
      retries: ${KOS_HEALTH_CHECK_RETRIES}

volumes:
  ${KOS_AUTOMATIC1111_MODELS_VOLUME}:
  ${KOS_AUTOMATIC1111_OUTPUTS_VOLUME}:
  ${KOS_AUTOMATIC1111_EXTENSIONS_VOLUME}:
  ${KOS_COMFYUI_MODELS_VOLUME}:
  ${KOS_COMFYUI_OUTPUTS_VOLUME}:
  ${KOS_COMFYUI_CUSTOM_NODES_VOLUME}:
  ${KOS_N8N_VOLUME}:
  ${KOS_PENPOT_VOLUME}:

networks:
  ${KOS_CONTAINER_NETWORK}:
    external: true 