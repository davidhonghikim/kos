{
  "name": "ai-q-knowledge-library-system",
  "version": "1.0.0",
  "description": "AI-Q Knowledge Library System - A comprehensive knowledge management system with dual-representation storage and AI-driven orchestration",
  "main": "dist/index.js",
  "scripts": {
    "build": "tsc",
    "build:prod": "npm run clean && tsc --project tsconfig.prod.json",
    "dev": "nodemon --exec ts-node src/index.ts",
    "start": "node dist/index.js",
    "test": "jest",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "test:e2e": "jest --testPathPattern=e2e",
    "test:coverage": "jest --coverage",
    "test:watch": "jest --watch",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "format": "prettier --write src/**/*.ts",
    "format:check": "prettier --check src/**/*.ts",
    "clean": "rimraf dist",
    "migrate": "ts-node src/scripts/migrate.ts",
    "seed": "ts-node src/scripts/seed.ts",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:restart": "docker-compose restart",
    "prepare": "husky install"
  },
  "keywords": [
    "knowledge-management",
    "ai",
    "rag",
    "typescript",
    "nodejs",
    "microservices",
    "elasticsearch",
    "weaviate",
    "neo4j"
  ],
  "author": "AI-Q Development Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/ai-q/knowledge-library-system.git"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "dependencies": {
    "@elastic/elasticsearch": "^8.11.0",
    "@godaddy/terminus": "^5.0.0",
    "@opentelemetry/api": "^1.4.0",
    "@opentelemetry/instrumentation-express": "^0.32.0",
    "@opentelemetry/instrumentation-http": "^0.40.0",
    "@opentelemetry/sdk-node": "^0.40.0",
    "apollo-server-express": "^3.12.0",
    "axios": "^1.4.0",
    "bcrypt": "^5.1.0",
    "bull": "^4.11.0",
    "class-transformer": "^0.5.0",
    "class-validator": "^0.14.0",
    "compression": "^1.7.0",
    "config": "^3.3.0",
    "cors": "^2.8.5",
    "dotenv": "^16.3.0",
    "express": "^4.18.0",
    "express-rate-limit": "^6.0.0",
    "graphql": "^16.6.0",
    "helmet": "^7.0.0",
    "joi": "^17.9.0",
    "jsonwebtoken": "^9.0.0",
    "lodash": "^4.17.0",
    "mammoth": "^1.6.0",
    "moment": "^2.29.0",
    "morgan": "^1.10.0",
    "multer": "^1.4.5",
    "neo4j-driver": "^5.0.0",
    "pdf-parse": "^1.1.1",
    "pg": "^8.11.0",
    "prettier": "^3.0.0",
    "prom-client": "^14.2.0",
    "redis": "^4.6.0",
    "swagger-jsdoc": "^6.2.0",
    "swagger-ui-express": "^5.0.0",
    "uuid": "^9.0.0",
    "weaviate-ts": "^1.0.0",
    "winston": "^3.10.0",
    "ws": "^8.13.0"
  },
  "devDependencies": {
    "@types/bcrypt": "^5.0.0",
    "@types/bull": "^4.10.0",
    "@types/cors": "^2.8.0",
    "@types/express": "^4.17.0",
    "@types/graphql": "^16.8.0",
    "@types/jest": "^29.5.0",
    "@types/jsonwebtoken": "^9.0.0",
    "@types/lodash": "^4.14.0",
    "@types/mammoth": "^1.4.0",
    "@types/moment": "^2.13.0",
    "@types/morgan": "^1.9.0",
    "@types/multer": "^1.4.0",
    "@types/neo4j-driver": "^5.0.0",
    "@types/node": "^20.0.0",
    "@types/pg": "^8.10.0",
    "@types/supertest": "^2.0.0",
    "@types/swagger-jsdoc": "^6.0.0",
    "@types/swagger-ui-express": "^4.1.0",
    "@types/uuid": "^9.0.0",
    "@types/ws": "^8.5.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.45.0",
    "husky": "^8.0.0",
    "jest": "^29.6.0",
    "lint-staged": "^13.2.0",
    "nodemon": "^3.0.0",
    "rimraf": "^5.0.0",
    "supertest": "^6.3.0",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.0",
    "ts-node": "^10.9.0",
    "typescript": "^5.0.0",
    "webpack": "^5.88.0",
    "webpack-cli": "^5.1.0",
    "webpack-node-externals": "^3.0.0"
  },
  "lint-staged": {
    "*.ts": [
      "eslint --fix",
      "prettier --write"
    ]
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/src",
      "<rootDir>/tests"
    ],
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/index.ts"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ]
  }
} 