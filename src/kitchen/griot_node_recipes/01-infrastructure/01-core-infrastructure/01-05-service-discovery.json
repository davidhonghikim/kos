{
  "recipe_metadata": {
    "recipe_id": "01-05-SERVICE-DISCOVERY-COMPREHENSIVE",
    "title": "Service Discovery and Configuration - Complete Implementation",
    "version": "5.0.0",
    "created_by": "Claude Sonnet 4",
    "creation_date": "2025-07-05T17:51:11Z",
    "last_updated": "2025-07-05T17:51:11Z",
    "estimated_tokens": 45000,
    "estimated_execution_time": "2-3 hours",
    "difficulty_level": "expert",
    "total_tasks": 8,
    "agent_autonomy_level": "95%",
    "success_rate_target": "99%",
    "compliance_standards": [
      "ISO 27001",
      "SOC 2"
    ],
    "architecture_tier": "enterprise-service-discovery",
    "description": "Complete Consul service discovery implementation with health checks, DNS resolution, and configuration management",
    "is_master_recipe": false,
    "dependencies": {
      "prerequisites": [
        "01-01-docker-environment",
        "01-02-system-monitoring",
        "01-03-logging-infrastructure",
        "01-04-load-balancing"
      ],
      "required_services": [
        "docker",
        "docker-compose"
      ],
      "required_networks": [
        "ai-q-network",
        "ai-q-services"
      ],
      "required_volumes": [
        "ai-q-data",
        "ai-q-config"
      ],
      "required_ports": [
        8500,
        8600,
        8300,
        8301,
        8302,
        8502
      ],
      "required_files": [
        "/opt/ai-q/service-discovery/"
      ]
    },
    "kitchen_system": {
      "pantry_category": "service_discovery",
      "cooking_time": "180 minutes",
      "complexity": "expert",
      "kitchen_tools": [
        "consul_setup",
        "service_registry",
        "health_checks",
        "dns_resolution"
      ],
      "cache_strategy": "service_discovery_infrastructure_cache",
      "orchestrator_priority": "critical"
    }
  },
  "recipe_overview": {
    "name": "Service Discovery and Configuration Infrastructure",
    "description": "Complete Consul service discovery infrastructure with health checks, DNS resolution, and configuration management",
    "prerequisites": [
      "01-01-docker-environment completed",
      "01-02-system-monitoring completed",
      "01-03-logging-infrastructure completed",
      "01-04-load-balancing completed",
      "Docker networks operational",
      "Docker volumes accessible",
      "Minimum 2GB RAM available",
      "10GB free disk space for Consul data"
    ],
    "target_outcome": "Production-ready service discovery infrastructure with comprehensive health monitoring",
    "success_criteria": [
      "Consul server operational and healthy",
      "Service registry configured and functional",
      "Health checks monitoring all services",
      "DNS resolution working properly",
      "ACL security configured and functional",
      "All components can be safely installed/uninstalled"
    ]
  },
  "pantry_ingredients": {
    "tasks": [
      {
        "task_id": "CONSUL_SETUP_TASK",
        "name": "Consul Server Setup",
        "description": "Install and configure Consul server with exact specifications",
        "estimated_time": "60 minutes",
        "dependencies": [],
        "skills_required": [
          "consul_configuration",
          "service_discovery",
          "health_checks"
        ],
        "exact_commands": [
          "mkdir -p /opt/ai-q/service-discovery/consul/{config,data,logs,scripts}",
          "chmod 755 /opt/ai-q/service-discovery/consul",
          "tee /opt/ai-q/service-discovery/consul/config/consul.json << 'EOF'",
          "{",
          "  \"datacenter\": \"ai-q-dc\",",
          "  \"data_dir\": \"/consul/data\",",
          "  \"log_level\": \"INFO\",",
          "  \"node_name\": \"ai-q-consul-server\",",
          "  \"server\": true,",
          "  \"bootstrap_expect\": 1,",
          "  \"client_addr\": \"0.0.0.0\",",
          "  \"bind_addr\": \"0.0.0.0\",",
          "  \"advertise_addr\": \"0.0.0.0\",",
          "  \"ui_config\": {",
          "    \"enabled\": true",
          "  },",
          "  \"connect\": {",
          "    \"enabled\": true",
          "  },",
          "  \"ports\": {",
          "    \"dns\": 8600,",
          "    \"http\": 8500,",
          "    \"https\": -1,",
          "    \"grpc\": 8502,",
          "    \"grpc_tls\": -1,",
          "    \"serf_lan\": 8301,",
          "    \"serf_wan\": 8302,",
          "    \"server\": 8300",
          "  },",
          "  \"recursors\": [\"8.8.8.8\", \"8.8.4.4\"],",
          "  \"disable_update_check\": true,",
          "  \"enable_script_checks\": true,",
          "  \"enable_local_script_checks\": true",
          "}",
          "EOF",
          "chown -R 100:100 /opt/ai-q/service-discovery/consul/"
        ],
        "validation_commands": [
          "ls -la /opt/ai-q/service-discovery/consul/",
          "cat /opt/ai-q/service-discovery/consul/config/consul.json",
          "consul validate /opt/ai-q/service-discovery/consul/config/consul.json"
        ]
      },
      {
        "task_id": "ACL_CONFIGURATION_TASK",
        "name": "ACL Configuration Setup",
        "description": "Configure ACL security for Consul with exact specifications",
        "estimated_time": "30 minutes",
        "dependencies": [
          "CONSUL_SETUP_TASK"
        ],
        "skills_required": [
          "acl_configuration",
          "security_hardening",
          "consul_security"
        ],
        "exact_commands": [
          "tee /opt/ai-q/service-discovery/consul/config/acl.json << 'EOF'",
          "{",
          "  \"acl\": {",
          "    \"enabled\": true,",
          "    \"default_policy\": \"deny\",",
          "    \"enable_token_persistence\": true,",
          "    \"tokens\": {",
          "      \"master\": \"b1gs33cr3t\",",
          "      \"agent\": \"b1gs33cr3t\",",
          "      \"agent_master\": \"b1gs33cr3t\",",
          "      \"replication\": \"b1gs33cr3t\"",
          "    }",
          "  }",
          "}",
          "EOF",
          "chmod 600 /opt/ai-q/service-discovery/consul/config/acl.json",
          "chown 100:100 /opt/ai-q/service-discovery/consul/config/acl.json"
        ],
        "validation_commands": [
          "cat /opt/ai-q/service-discovery/consul/config/acl.json",
          "consul validate /opt/ai-q/service-discovery/consul/config/acl.json"
        ]
      },
      {
        "task_id": "SERVICE_REGISTRY_TASK",
        "name": "Service Registry Configuration",
        "description": "Configure service registry with health checks and service definitions",
        "estimated_time": "45 minutes",
        "dependencies": [
          "ACL_CONFIGURATION_TASK"
        ],
        "skills_required": [
          "service_registry",
          "health_checks",
          "service_definitions"
        ],
        "exact_commands": [
          "mkdir -p /opt/ai-q/service-discovery/consul/{services,checks}",
          "tee /opt/ai-q/service-discovery/consul/services/frontend.json << 'EOF'",
          "{",
          "  \"service\": {",
          "    \"name\": \"frontend\",",
          "    \"id\": \"frontend-1\",",
          "    \"port\": 3000,",
          "    \"tags\": [\"web\", \"frontend\", \"ai-q\"],",
          "    \"meta\": {",
          "      \"version\": \"1.0.0\",",
          "      \"environment\": \"production\"",
          "    },",
          "    \"check\": {",
          "      \"id\": \"frontend-health\",",
          "      \"name\": \"Frontend Health Check\",",
          "      \"http\": \"http://localhost:3000/health\",",
          "      \"interval\": \"10s\",",
          "      \"timeout\": \"5s\",",
          "      \"deregistercriticalserviceafter\": \"30s\"",
          "    }",
          "  }",
          "}",
          "EOF",
          "tee /opt/ai-q/service-discovery/consul/services/backend.json << 'EOF'",
          "{",
          "  \"service\": {",
          "    \"name\": \"backend\",",
          "    \"id\": \"backend-1\",",
          "    \"port\": 8000,",
          "    \"tags\": [\"api\", \"backend\", \"ai-q\"],",
          "    \"meta\": {",
          "      \"version\": \"1.0.0\",",
          "      \"environment\": \"production\"",
          "    },",
          "    \"check\": {",
          "      \"id\": \"backend-health\",",
          "      \"name\": \"Backend Health Check\",",
          "      \"http\": \"http://localhost:8000/health\",",
          "      \"interval\": \"10s\",",
          "      \"timeout\": \"5s\",",
          "      \"deregistercriticalserviceafter\": \"30s\"",
          "    }",
          "  }",
          "}",
          "EOF",
          "chown -R 100:100 /opt/ai-q/service-discovery/consul/services/"
        ],
        "validation_commands": [
          "ls -la /opt/ai-q/service-discovery/consul/services/",
          "cat /opt/ai-q/service-discovery/consul/services/frontend.json",
          "cat /opt/ai-q/service-discovery/consul/services/backend.json"
        ]
      },
      {
        "task_id": "DNS_RESOLUTION_TASK",
        "name": "DNS Resolution Configuration",
        "description": "Configure DNS resolution for service discovery",
        "estimated_time": "30 minutes",
        "dependencies": [
          "SERVICE_REGISTRY_TASK"
        ],
        "skills_required": [
          "dns_configuration",
          "service_resolution",
          "network_configuration"
        ],
        "exact_commands": [
          "tee /opt/ai-q/service-discovery/consul/config/dns.json << 'EOF'",
          "{",
          "  \"dns_config\": {",
          "    \"allow_stale\": true,",
          "    \"max_stale\": \"5s\",",
          "    \"node_ttl\": \"0s\",",
          "    \"service_ttl\": {",
          "      \"*\": \"0s\"",
          "    },",
          "    \"enable_truncate\": true,",
          "    \"only_passing\": false",
          "  }",
          "}",
          "EOF",
          "chmod 644 /opt/ai-q/service-discovery/consul/config/dns.json",
          "chown 100:100 /opt/ai-q/service-discovery/consul/config/dns.json"
        ],
        "validation_commands": [
          "cat /opt/ai-q/service-discovery/consul/config/dns.json",
          "consul validate /opt/ai-q/service-discovery/consul/config/dns.json"
        ]
      },
      {
        "task_id": "CONSUL_DEPLOYMENT_TASK",
        "name": "Consul Container Deployment",
        "description": "Deploy Consul server in Docker container",
        "estimated_time": "30 minutes",
        "dependencies": [
          "DNS_RESOLUTION_TASK"
        ],
        "skills_required": [
          "docker_deployment",
          "container_management",
          "service_deployment"
        ],
        "exact_commands": [
          "docker run -d --name ai-q-consul-server \\",
          "  --network ai-q-network \\",
          "  --restart unless-stopped \\",
          "  -p 8500:8500 \\",
          "  -p 8600:8600/udp \\",
          "  -p 8300:8300 \\",
          "  -p 8301:8301 \\",
          "  -p 8302:8302 \\",
          "  -p 8502:8502 \\",
          "  -v /opt/ai-q/service-discovery/consul/config:/consul/config \\",
          "  -v /opt/ai-q/service-discovery/consul/data:/consul/data \\",
          "  -v /opt/ai-q/service-discovery/consul/logs:/consul/logs \\",
          "  consul:1.15.4 agent -server -bootstrap-expect=1 -ui -client=0.0.0.0",
          "sleep 10",
          "docker logs ai-q-consul-server"
        ],
        "validation_commands": [
          "docker ps --filter name=ai-q-consul-server",
          "curl -s http://localhost:8500/v1/status/leader",
          "curl -s http://localhost:8500/v1/catalog/services"
        ]
      },
      {
        "task_id": "HEALTH_MONITORING_TASK",
        "name": "Health Monitoring Setup",
        "description": "Configure health monitoring and alerting for Consul",
        "estimated_time": "30 minutes",
        "dependencies": [
          "CONSUL_DEPLOYMENT_TASK"
        ],
        "skills_required": [
          "health_monitoring",
          "alerting",
          "metrics_collection"
        ],
        "exact_commands": [
          "tee /opt/ai-q/service-discovery/consul/scripts/health_check.sh << 'EOF'",
          "#!/bin/bash",
          "consul_addr=\"http://localhost:8500\"",
          "leader_status=$(curl -s \"$consul_addr/v1/status/leader\")",
          "if [ -z \"$leader_status\" ] || [ \"$leader_status\" = \"null\" ]; then",
          "  echo \"ERROR: Consul leader not available\"",
          "  exit 1",
          "fi",
          "echo \"Consul leader: $leader_status\"",
          "services=$(curl -s \"$consul_addr/v1/catalog/services\" | jq 'keys | length')",
          "echo \"Registered services: $services\"",
          "EOF",
          "chmod +x /opt/ai-q/service-discovery/consul/scripts/health_check.sh",
          "chown 100:100 /opt/ai-q/service-discovery/consul/scripts/health_check.sh",
          "/opt/ai-q/service-discovery/consul/scripts/health_check.sh"
        ],
        "validation_commands": [
          "ls -la /opt/ai-q/service-discovery/consul/scripts/",
          "/opt/ai-q/service-discovery/consul/scripts/health_check.sh",
          "curl -s http://localhost:8500/v1/health/state/any"
        ]
      },
      {
        "task_id": "INTEGRATION_TESTING_TASK",
        "name": "Integration Testing",
        "description": "Test service discovery integration with other components",
        "estimated_time": "30 minutes",
        "dependencies": [
          "HEALTH_MONITORING_TASK"
        ],
        "skills_required": [
          "integration_testing",
          "service_testing",
          "dns_testing"
        ],
        "exact_commands": [
          "curl -s http://localhost:8500/v1/catalog/services | jq .",
          "dig @localhost -p 8600 frontend.service.consul",
          "dig @localhost -p 8600 backend.service.consul",
          "curl -s http://localhost:8500/v1/health/service/frontend | jq .",
          "curl -s http://localhost:8500/v1/health/service/backend | jq ."
        ],
        "validation_commands": [
          "curl -s http://localhost:8500/v1/catalog/services | jq 'keys | length'",
          "dig @localhost -p 8600 frontend.service.consul +short",
          "dig @localhost -p 8600 backend.service.consul +short"
        ]
      },
      {
        "task_id": "DOCUMENTATION_TASK",
        "name": "Documentation and Handover",
        "description": "Create comprehensive documentation for service discovery setup",
        "estimated_time": "15 minutes",
        "dependencies": [
          "INTEGRATION_TESTING_TASK"
        ],
        "skills_required": [
          "documentation",
          "handover",
          "knowledge_transfer"
        ],
        "exact_commands": [
          "tee /opt/ai-q/service-discovery/README.md << 'EOF'",
          "# AI-Q Service Discovery Infrastructure",
          "",
          "## Overview",
          "Complete Consul service discovery implementation with health checks, DNS resolution, and configuration management.",
          "",
          "## Services",
          "- Consul Server: http://localhost:8500",
          "- DNS Resolution: localhost:8600",
          "- Health Checks: Integrated with all services",
          "",
          "## Configuration Files",
          "- Consul Config: /opt/ai-q/service-discovery/consul/config/consul.json",
          "- ACL Config: /opt/ai-q/service-discovery/consul/config/acl.json",
          "- DNS Config: /opt/ai-q/service-discovery/consul/config/dns.json",
          "",
          "## Health Monitoring",
          "- Health Check Script: /opt/ai-q/service-discovery/consul/scripts/health_check.sh",
          "- Service Definitions: /opt/ai-q/service-discovery/consul/services/",
          "",
          "## Ports",
          "- HTTP API: 8500",
          "- DNS: 8600",
          "- RPC: 8300",
          "- Serf LAN: 8301",
          "- Serf WAN: 8302",
          "- gRPC: 8502",
          "EOF",
          "chmod 644 /opt/ai-q/service-discovery/README.md",
          "chown 100:100 /opt/ai-q/service-discovery/README.md"
        ],
        "validation_commands": [
          "cat /opt/ai-q/service-discovery/README.md",
          "ls -la /opt/ai-q/service-discovery/"
        ]
      }
    ]
  },
  "kitchen_execution": {
    "orchestrator_steps": [
      {
        "step_id": "STEP_1",
        "action": "gather_ingredients",
        "description": "Load all required pantry ingredients with aggressive caching",
        "ingredients": [
          "task:consul-setup:1.0.0",
          "task:acl-configuration:1.0.0",
          "task:service-registry:1.0.0",
          "task:dns-resolution:1.0.0",
          "task:consul-deployment:1.0.0",
          "task:health-monitoring:1.0.0",
          "task:integration-testing:1.0.0",
          "task:documentation:1.0.0",
          "skill:consul-configuration:1.0.0",
          "skill:service-discovery:1.0.0",
          "skill:health-checks:1.0.0",
          "skill:dns-resolution:1.0.0",
          "tool:consul-setup:1.0.0",
          "tool:service-registry:1.0.0",
          "config:consul:1.0.0",
          "config:acl:1.0.0"
        ],
        "exact_commands": [
          "python3 scripts/service_discovery/setup_consul.py --gather-ingredients",
          "python3 scripts/service_discovery/setup_acl.py --gather-ingredients",
          "python3 scripts/service_discovery/setup_registry.py --gather-ingredients"
        ]
      },
      {
        "step_id": "STEP_2",
        "action": "validate_dependencies",
        "description": "Verify all ingredient dependencies are satisfied",
        "checks": [
          "Docker environment operational",
          "Docker networks available",
          "Docker volumes accessible",
          "Minimum 2GB RAM available",
          "10GB free disk space available",
          "Load balancing infrastructure operational"
        ],
        "exact_commands": [
          "docker network ls --filter name=ai-q",
          "docker volume ls --filter name=ai-q",
          "free -h | grep Mem | awk '{print $2}'",
          "df -h /opt/ai-q | awk 'NR==2 {print $4}'",
          "docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'",
          "curl -s http://localhost/health || echo 'Load balancer not ready'"
        ]
      },
      {
        "step_id": "STEP_3",
        "action": "execute_consul_setup",
        "description": "Install and configure Consul server with exact commands",
        "sub_steps": [
          "Create Consul directories",
          "Create Consul configuration",
          "Set permissions",
          "Validate configuration"
        ],
        "exact_commands": [
          "mkdir -p /opt/ai-q/service-discovery/consul/{config,data,logs,scripts}",
          "chmod 755 /opt/ai-q/service-discovery/consul",
          "tee /opt/ai-q/service-discovery/consul/config/consul.json << 'EOF'",
          "{",
          "  \"datacenter\": \"ai-q-dc\",",
          "  \"data_dir\": \"/consul/data\",",
          "  \"log_level\": \"INFO\",",
          "  \"node_name\": \"ai-q-consul-server\",",
          "  \"server\": true,",
          "  \"bootstrap_expect\": 1,",
          "  \"client_addr\": \"0.0.0.0\",",
          "  \"bind_addr\": \"0.0.0.0\",",
          "  \"advertise_addr\": \"0.0.0.0\",",
          "  \"ui_config\": {",
          "    \"enabled\": true",
          "  },",
          "  \"connect\": {",
          "    \"enabled\": true",
          "  },",
          "  \"ports\": {",
          "    \"dns\": 8600,",
          "    \"http\": 8500,",
          "    \"https\": -1,",
          "    \"grpc\": 8502,",
          "    \"grpc_tls\": -1,",
          "    \"serf_lan\": 8301,",
          "    \"serf_wan\": 8302,",
          "    \"server\": 8300",
          "  },",
          "  \"recursors\": [\"8.8.8.8\", \"8.8.4.4\"],",
          "  \"disable_update_check\": true,",
          "  \"enable_script_checks\": true,",
          "  \"enable_local_script_checks\": true",
          "}",
          "EOF",
          "chown -R 100:100 /opt/ai-q/service-discovery/consul/"
        ],
        "files_to_create": [
          "/opt/ai-q/service-discovery/consul/config/",
          "/opt/ai-q/service-discovery/consul/data/",
          "/opt/ai-q/service-discovery/consul/logs/",
          "/opt/ai-q/service-discovery/consul/scripts/",
          "/opt/ai-q/service-discovery/consul/config/consul.json"
        ]
      },
      {
        "step_id": "STEP_4",
        "action": "execute_acl_configuration",
        "description": "Configure ACL security for Consul with exact commands",
        "sub_steps": [
          "Create ACL configuration",
          "Set ACL permissions",
          "Validate ACL configuration"
        ],
        "exact_commands": [
          "tee /opt/ai-q/service-discovery/consul/config/acl.json << 'EOF'",
          "{",
          "  \"acl\": {",
          "    \"enabled\": true,",
          "    \"default_policy\": \"deny\",",
          "    \"enable_token_persistence\": true,",
          "    \"tokens\": {",
          "      \"master\": \"b1gs33cr3t\",",
          "      \"agent\": \"b1gs33cr3t\",",
          "      \"agent_master\": \"b1gs33cr3t\",",
          "      \"replication\": \"b1gs33cr3t\"",
          "    }",
          "  }",
          "}",
          "EOF",
          "chmod 600 /opt/ai-q/service-discovery/consul/config/acl.json",
          "chown 100:100 /opt/ai-q/service-discovery/consul/config/acl.json"
        ],
        "files_to_create": [
          "/opt/ai-q/service-discovery/consul/config/acl.json"
        ]
      },
      {
        "step_id": "STEP_5",
        "action": "execute_service_registry",
        "description": "Configure service registry with health checks and service definitions",
        "sub_steps": [
          "Create service directories",
          "Create service definitions",
          "Set service permissions"
        ],
        "exact_commands": [
          "mkdir -p /opt/ai-q/service-discovery/consul/{services,checks}",
          "tee /opt/ai-q/service-discovery/consul/services/frontend.json << 'EOF'",
          "{",
          "  \"service\": {",
          "    \"name\": \"frontend\",",
          "    \"id\": \"frontend-1\",",
          "    \"port\": 3000,",
          "    \"tags\": [\"web\", \"frontend\", \"ai-q\"],",
          "    \"meta\": {",
          "      \"version\": \"1.0.0\",",
          "      \"environment\": \"production\"",
          "    },",
          "    \"check\": {",
          "      \"id\": \"frontend-health\",",
          "      \"name\": \"Frontend Health Check\",",
          "      \"http\": \"http://localhost:3000/health\",",
          "      \"interval\": \"10s\",",
          "      \"timeout\": \"5s\",",
          "      \"deregistercriticalserviceafter\": \"30s\"",
          "    }",
          "  }",
          "}",
          "EOF",
          "tee /opt/ai-q/service-discovery/consul/services/backend.json << 'EOF'",
          "{",
          "  \"service\": {",
          "    \"name\": \"backend\",",
          "    \"id\": \"backend-1\",",
          "    \"port\": 8000,",
          "    \"tags\": [\"api\", \"backend\", \"ai-q\"],",
          "    \"meta\": {",
          "      \"version\": \"1.0.0\",",
          "      \"environment\": \"production\"",
          "    },",
          "    \"check\": {",
          "      \"id\": \"backend-health\",",
          "      \"name\": \"Backend Health Check\",",
          "      \"http\": \"http://localhost:8000/health\",",
          "      \"interval\": \"10s\",",
          "      \"timeout\": \"5s\",",
          "      \"deregistercriticalserviceafter\": \"30s\"",
          "    }",
          "  }",
          "}",
          "EOF",
          "chown -R 100:100 /opt/ai-q/service-discovery/consul/services/"
        ],
        "files_to_create": [
          "/opt/ai-q/service-discovery/consul/services/",
          "/opt/ai-q/service-discovery/consul/checks/",
          "/opt/ai-q/service-discovery/consul/services/frontend.json",
          "/opt/ai-q/service-discovery/consul/services/backend.json"
        ]
      },
      {
        "step_id": "STEP_6",
        "action": "execute_dns_resolution",
        "description": "Configure DNS resolution for service discovery",
        "sub_steps": [
          "Create DNS configuration",
          "Set DNS permissions",
          "Validate DNS configuration"
        ],
        "exact_commands": [
          "tee /opt/ai-q/service-discovery/consul/config/dns.json << 'EOF'",
          "{",
          "  \"dns_config\": {",
          "    \"allow_stale\": true,",
          "    \"max_stale\": \"5s\",",
          "    \"node_ttl\": \"0s\",",
          "    \"service_ttl\": {",
          "      \"*\": \"0s\"",
          "    },",
          "    \"enable_truncate\": true,",
          "    \"only_passing\": false",
          "  }",
          "}",
          "EOF",
          "chmod 644 /opt/ai-q/service-discovery/consul/config/dns.json",
          "chown 100:100 /opt/ai-q/service-discovery/consul/config/dns.json"
        ],
        "files_to_create": [
          "/opt/ai-q/service-discovery/consul/config/dns.json"
        ]
      },
      {
        "step_id": "STEP_7",
        "action": "execute_consul_deployment",
        "description": "Deploy Consul server in Docker container",
        "sub_steps": [
          "Deploy Consul container",
          "Wait for startup",
          "Validate deployment"
        ],
        "exact_commands": [
          "docker run -d --name ai-q-consul-server \\",
          "  --network ai-q-network \\",
          "  --restart unless-stopped \\",
          "  -p 8500:8500 \\",
          "  -p 8600:8600/udp \\",
          "  -p 8300:8300 \\",
          "  -p 8301:8301 \\",
          "  -p 8302:8302 \\",
          "  -p 8502:8502 \\",
          "  -v /opt/ai-q/service-discovery/consul/config:/consul/config \\",
          "  -v /opt/ai-q/service-discovery/consul/data:/consul/data \\",
          "  -v /opt/ai-q/service-discovery/consul/logs:/consul/logs \\",
          "  consul:1.15.4 agent -server -bootstrap-expect=1 -ui -client=0.0.0.0",
          "sleep 10",
          "docker logs ai-q-consul-server"
        ],
        "files_to_create": [
          "Docker container: ai-q-consul-server"
        ]
      },
      {
        "step_id": "STEP_8",
        "action": "execute_health_monitoring",
        "description": "Configure health monitoring and alerting for Consul",
        "sub_steps": [
          "Create health check script",
          "Set script permissions",
          "Test health monitoring"
        ],
        "exact_commands": [
          "tee /opt/ai-q/service-discovery/consul/scripts/health_check.sh << 'EOF'",
          "#!/bin/bash",
          "consul_addr=\"http://localhost:8500\"",
          "leader_status=$(curl -s \"$consul_addr/v1/status/leader\")",
          "if [ -z \"$leader_status\" ] || [ \"$leader_status\" = \"null\" ]; then",
          "  echo \"ERROR: Consul leader not available\"",
          "  exit 1",
          "fi",
          "echo \"Consul leader: $leader_status\"",
          "services=$(curl -s \"$consul_addr/v1/catalog/services\" | jq 'keys | length')",
          "echo \"Registered services: $services\"",
          "EOF",
          "chmod +x /opt/ai-q/service-discovery/consul/scripts/health_check.sh",
          "chown 100:100 /opt/ai-q/service-discovery/consul/scripts/health_check.sh",
          "/opt/ai-q/service-discovery/consul/scripts/health_check.sh"
        ],
        "files_to_create": [
          "/opt/ai-q/service-discovery/consul/scripts/health_check.sh"
        ]
      },
      {
        "step_id": "STEP_9",
        "action": "execute_integration_testing",
        "description": "Test service discovery integration with other components",
        "sub_steps": [
          "Test service catalog",
          "Test DNS resolution",
          "Test health checks"
        ],
        "exact_commands": [
          "curl -s http://localhost:8500/v1/catalog/services | jq .",
          "dig @localhost -p 8600 frontend.service.consul",
          "dig @localhost -p 8600 backend.service.consul",
          "curl -s http://localhost:8500/v1/health/service/frontend | jq .",
          "curl -s http://localhost:8500/v1/health/service/backend | jq ."
        ],
        "files_to_create": []
      },
      {
        "step_id": "STEP_10",
        "action": "execute_documentation",
        "description": "Create comprehensive documentation for service discovery setup",
        "sub_steps": [
          "Create documentation file",
          "Set documentation permissions",
          "Validate documentation"
        ],
        "exact_commands": [
          "tee /opt/ai-q/service-discovery/README.md << 'EOF'",
          "# AI-Q Service Discovery Infrastructure",
          "",
          "## Overview",
          "Complete Consul service discovery implementation with health checks, DNS resolution, and configuration management.",
          "",
          "## Services",
          "- Consul Server: http://localhost:8500",
          "- DNS Resolution: localhost:8600",
          "- Health Checks: Integrated with all services",
          "",
          "## Configuration Files",
          "- Consul Config: /opt/ai-q/service-discovery/consul/config/consul.json",
          "- ACL Config: /opt/ai-q/service-discovery/consul/config/acl.json",
          "- DNS Config: /opt/ai-q/service-discovery/consul/config/dns.json",
          "",
          "## Health Monitoring",
          "- Health Check Script: /opt/ai-q/service-discovery/consul/scripts/health_check.sh",
          "- Service Definitions: /opt/ai-q/service-discovery/consul/services/",
          "",
          "## Ports",
          "- HTTP API: 8500",
          "- DNS: 8600",
          "- RPC: 8300",
          "- Serf LAN: 8301",
          "- Serf WAN: 8302",
          "- gRPC: 8502",
          "EOF",
          "chmod 644 /opt/ai-q/service-discovery/README.md",
          "chown 100:100 /opt/ai-q/service-discovery/README.md"
        ],
        "files_to_create": [
          "/opt/ai-q/service-discovery/README.md"
        ]
      },
      {
        "step_id": "STEP_11",
        "action": "validate_results",
        "description": "Validate complete service discovery infrastructure setup",
        "validation": "service_discovery_infrastructure_validation",
        "exact_commands": [
          "docker ps --filter name=ai-q-consul-server",
          "curl -f http://localhost:8500/v1/status/leader",
          "curl -f http://localhost:8500/v1/catalog/services",
          "dig @localhost -p 8600 frontend.service.consul",
          "dig @localhost -p 8600 backend.service.consul",
          "curl -f http://localhost:8500/v1/health/service/frontend",
          "curl -f http://localhost:8500/v1/health/service/backend",
          "/opt/ai-q/service-discovery/consul/scripts/health_check.sh"
        ]
      },
      {
        "step_id": "STEP_12",
        "action": "cache_results",
        "description": "Cache service discovery infrastructure configuration and setup",
        "cache_key": "service_discovery_infrastructure_cache",
        "exact_commands": [
          "python3 scripts/service_discovery/setup_consul.py --cache-results",
          "python3 scripts/service_discovery/setup_acl.py --cache-results",
          "python3 scripts/service_discovery/setup_services.py --cache-results",
          "tar -czf /opt/ai-q/cache/service_discovery_infrastructure_cache.tar.gz /opt/ai-q/service-discovery"
        ]
      }
    ],
    "caching_strategy": {
      "cache_key": "service_discovery_infrastructure_cache",
      "cache_duration": "persistent",
      "cache_invalidation": "service_discovery_update",
      "cache_validation": "service_discovery_infrastructure_validation",
      "exact_cache_commands": [
        "python3 scripts/service_discovery/setup_consul.py --cache-config",
        "python3 scripts/service_discovery/setup_acl.py --cache-config",
        "python3 scripts/service_discovery/setup_services.py --cache-config"
      ]
    }
  },
  "acceptance_criteria": [
    "Consul server is running and accessible on port 8500",
    "Service registry contains frontend and backend service definitions",
    "Health checks are monitoring all registered services",
    "DNS resolution is working for service discovery",
    "ACL security is properly configured",
    "All configuration files are properly created and secured",
    "Health monitoring script is functional",
    "Integration tests pass successfully",
    "Documentation is complete and accurate",
    "Zero technical debt with complete documentation"
  ],
  "deliverables": [
    "Production-ready service discovery infrastructure with Consul",
    "Service registry with health checks and monitoring",
    "DNS resolution for service discovery",
    "ACL security configuration",
    "Health monitoring and alerting",
    "Comprehensive documentation with troubleshooting guides",
    "Validation scripts for all components",
    "Rollback procedures for safe deployment"
  ],
  "troubleshooting_guide": {
    "common_issues": [
      {
        "issue": "Consul container fails to start",
        "symptoms": [
          "Container exits immediately",
          "Port 8500 not accessible"
        ],
        "diagnosis": "Check Consul configuration and file permissions",
        "solution": "Verify configuration and restart container",
        "prevention": "Test configuration before deployment"
      },
      {
        "issue": "Service registration fails",
        "symptoms": [
          "Services not appearing in catalog",
          "Registration errors"
        ],
        "diagnosis": "Check service definitions and ACL configuration",
        "solution": "Verify service definitions and ACL tokens",
        "prevention": "Test service registration before deployment"
      },
      {
        "issue": "DNS resolution not working",
        "symptoms": [
          "DNS queries fail",
          "Service names not resolving"
        ],
        "diagnosis": "Check DNS configuration and port 8600",
        "solution": "Verify DNS configuration and restart Consul",
        "prevention": "Test DNS resolution before deployment"
      },
      {
        "issue": "Health checks failing",
        "symptoms": [
          "Services showing as unhealthy",
          "Health check errors"
        ],
        "diagnosis": "Check health check configuration and service endpoints",
        "solution": "Verify health check endpoints and configuration",
        "prevention": "Test health checks before deployment"
      },
      {
        "issue": "ACL authentication errors",
        "symptoms": [
          "401 Unauthorized",
          "ACL token invalid"
        ],
        "diagnosis": "Check ACL configuration and token setup",
        "solution": "Verify ACL configuration and token permissions",
        "prevention": "Test ACL configuration before deployment"
      }
    ],
    "diagnostic_commands": [
      "docker ps --filter name=ai-q-consul-server",
      "curl -f http://localhost:8500/v1/status/leader",
      "curl -f http://localhost:8500/v1/catalog/services",
      "dig @localhost -p 8600 frontend.service.consul",
      "curl -f http://localhost:8500/v1/health/service/frontend",
      "docker logs ai-q-consul-server"
    ]
  },
  "performance_benchmarks": {
    "installation_time": "< 3 hours",
    "consul_startup_time": "< 30 seconds",
    "service_registration_time": "< 5 seconds",
    "dns_resolution_time": "< 10ms",
    "health_check_interval": "10 seconds",
    "catalog_update_time": "< 1 second",
    "max_services": 1000,
    "max_health_checks": 5000
  },
  "inputs": {
    "default_input": {
      "type": "string",
      "required": false,
      "default": "default_value",
      "description": "Default input parameter"
    }
  },
  "outputs": {
    "default_output": {
      "type": "string",
      "description": "Default output parameter"
    }
  },
  "metadata": {
    "title": "01-05-Service-Discovery",
    "version": "1.0.0",
    "creation_timestamp": "2025-07-07T05:00:00Z",
    "last_updated": "2025-07-07T05:00:00Z"
  },
  "steps": [
    {
      "step_id": "STEP-01",
      "description": "Default implementation step",
      "command": "echo 'Recipe step needs implementation'",
      "expected_output": "Step completed successfully",
      "error_handling": "Continue on error"
    }
  ]
}