{
  "recipe_metadata": {
    "recipe_id": "02-AI-SERVICE-HARDWARE-PROFILER-001",
    "title": "Hardware and OS Profiler Module",
    "version": "1.0.0",
    "created_by": "Gemini",
    "creation_date": "2025-07-05T00:00:00Z",
    "difficulty_level": "intermediate",
    "total_tasks": 1,
    "kitchen_system": {
      "pantry_category": "system_profiling",
      "cooking_time": "30 minutes",
      "complexity": "intermediate",
      "kitchen_tools": [
        "hardware_detection",
        "system_analysis",
        "configuration_management"
      ],
      "cache_strategy": "hardware_profile_cache",
      "orchestrator_priority": "high"
    }
  },
  "recipe_overview": {
    "description": "This recipe creates a system to detect the host's operating system, CPU, GPU (including model and VRAM), and available RAM. The collected data will inform which AI services and models can be run effectively, enabling auto-configuration and user recommendations.",
    "technology_stack": {
      "language": "Python",
      "dependencies": [
        "psutil",
        "py-cpuinfo",
        "GPUtil"
      ],
      "integration_points": [
        "configuration_system",
        "ai_service_selection",
        "model_recommendations"
      ]
    },
    "deliverables": [
      "A script to detect OS, CPU, GPU, and RAM.",
      "A JSON output file containing the hardware profile.",
      "Integration with the main configuration system."
    ]
  },
  "pantry_ingredients": {
    "tasks": [
      {
        "task_id": "HARDWARE_PROFILING_TASK",
        "name": "System Hardware Profiling",
        "description": "Detect and profile system hardware components",
        "estimated_time": "30 minutes",
        "dependencies": [],
        "skills_required": [
          "python_scripting",
          "system_analysis",
          "hardware_detection"
        ]
      }
    ],
    "skills": [
      {
        "skill_id": "HARDWARE_DETECTION_SKILL",
        "name": "Hardware Detection",
        "description": "Detect CPU, GPU, RAM, and OS information",
        "tools": [
          "psutil",
          "py-cpuinfo",
          "GPUtil"
        ],
        "validation": "hardware_profile_validation"
      },
      {
        "skill_id": "SYSTEM_ANALYSIS_SKILL",
        "name": "System Analysis",
        "description": "Analyze system capabilities and limitations",
        "tools": [
          "hardware_profiler",
          "capability_assessment"
        ],
        "validation": "system_analysis_validation"
      }
    ],
    "tools": [
      {
        "tool_id": "HARDWARE_PROFILER_TOOL",
        "name": "Hardware Profiler",
        "description": "Python script for hardware detection",
        "file_path": "scripts/system/hardware_profiler.py",
        "config": "config/hardware_profile.json"
      },
      {
        "tool_id": "CAPABILITY_ASSESSMENT_TOOL",
        "name": "Capability Assessment",
        "description": "Assess system capabilities for AI workloads",
        "file_path": "scripts/system/capability_assessment.py",
        "config": "config/capability_profile.json"
      }
    ],
    "configs": [
      {
        "config_id": "HARDWARE_PROFILE_CONFIG",
        "name": "Hardware Profile Configuration",
        "description": "Configuration for hardware profiling",
        "file_path": "config/hardware_profile.json",
        "schema": "hardware_profile_schema"
      },
      {
        "config_id": "CAPABILITY_PROFILE_CONFIG",
        "name": "Capability Profile Configuration",
        "description": "Configuration for system capabilities",
        "file_path": "config/capability_profile.json",
        "schema": "capability_profile_schema"
      }
    ]
  },
  "kitchen_execution": {
    "orchestrator_steps": [
      {
        "step_id": "STEP_1",
        "action": "gather_ingredients",
        "ingredients": [
          "HARDWARE_PROFILING_TASK",
          "HARDWARE_DETECTION_SKILL",
          "HARDWARE_PROFILER_TOOL"
        ],
        "description": "Gather hardware profiling ingredients from pantry"
      },
      {
        "step_id": "STEP_2",
        "action": "check_cache",
        "cache_key": "hardware_profile_cache",
        "description": "Check for existing hardware profile cache"
      },
      {
        "step_id": "STEP_3",
        "action": "execute_task",
        "task": "HARDWARE_PROFILING_TASK",
        "description": "Execute hardware profiling task"
      },
      {
        "step_id": "STEP_4",
        "action": "validate_results",
        "validation": "hardware_profile_validation",
        "description": "Validate hardware profiling results"
      },
      {
        "step_id": "STEP_5",
        "action": "cache_results",
        "cache_key": "hardware_profile_cache",
        "description": "Cache hardware profiling results"
      },
      {
        "step_id": "STEP_6",
        "action": "integrate_with_system",
        "integration": "configuration_system",
        "description": "Integrate results with main configuration system"
      }
    ],
    "caching_strategy": {
      "cache_key": "hardware_profile_cache",
      "cache_duration": "24 hours",
      "cache_invalidation": "system_restart",
      "cache_validation": "hardware_profile_validation"
    }
  },
  "tasks": [
    {
      "id": "40-001",
      "title": "Create Hardware Profiling Scripts",
      "description": "Develop Python scripts to gather detailed hardware and OS information.",
      "estimated_time": "30 minutes",
      "commands": [
        "pip install psutil py-cpuinfo GPUtil"
      ],
      "files_to_create": [
        "scripts/system/hardware_profiler.py",
        "config/hardware_profile.json"
      ],
      "acceptance_criteria": [
        "Script successfully detects the OS type and version.",
        "Script identifies the CPU model and core count.",
        "Script detects the GPU model and VRAM, if present.",
        "Script accurately reports total and available system RAM.",
        "All collected data is correctly written to 'config/hardware_profile.json'."
      ]
    }
  ],
  "inputs": {
    "default_input": {
      "type": "string",
      "required": false,
      "default": "default_value",
      "description": "Default input parameter"
    }
  },
  "outputs": {
    "default_output": {
      "type": "string",
      "description": "Default output parameter"
    }
  },
  "metadata": {
    "title": "01-Hardware-Profiler",
    "version": "1.0.0",
    "creation_timestamp": "2025-07-07T05:00:00Z",
    "last_updated": "2025-07-07T05:00:00Z"
  },
  "steps": [
    {
      "step_id": "STEP-01",
      "description": "Default implementation step",
      "command": "echo 'Recipe step needs implementation'",
      "expected_output": "Step completed successfully",
      "error_handling": "Continue on error"
    }
  ]
}